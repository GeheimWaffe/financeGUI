# Load the pgsql schema
from datetime import timedelta
from sqlalchemy import MetaData, Select, ForeignKey

# Mapping the tables
from typing import List
from typing import Optional

#####################
# Manipulate the data
#####################
from user_model_orm import User, Address
from sqlalchemy.orm import Session
from sqlalchemy import insert, select

from engines import get_pgfin_engine
e = get_pgfin_engine()

trigger_inserts = True
trigger_deletes = False
trigger_updates = False

with Session(e) as session:
    result = session.scalar(select(User))
    if result != None:
        for r in result:
            print(r)

if trigger_updates:
    with Session(e) as session:
        sponges = session.execute(select(User).filter_by(name='spongebob'))
        for u in sponges:
            u[0].fullname = 'Sponge2'
            u[0].surname = 'stupid animated person'
            session.add(u[0])

        session.commit()
        session.flush()


if trigger_deletes:
    with Session(e) as session:
        sponges = session.execute(select(User).filter_by(name='spongebob'))
        for s in sponges:
            session.delete(s[0])

        session.commit()
        session.flush()

if trigger_inserts:
    # Import the content
    with Session(e) as session:
        spongebob = User(
            name="spongebob",
            fullname="Spongebob Squarepants",
            surname="Sponge",
            addresses=[Address(email_address='spongebob@sqlalchemy.org')]
        )

        sandy = User(
            name="sandy",
            fullname="Sandy Cheeks",
            addresses=[
                Address(email_address='sandy@sqlalchemy.org'),
                Address(email_address='sandy@spongebob.org')
            ]
        )

        a = Address(email_address='newadress@gmail.com')

        spongebob.addresses.append(a)

        session.add(spongebob)
        session.add(sandy)
        session.commit()
        session.flush()
